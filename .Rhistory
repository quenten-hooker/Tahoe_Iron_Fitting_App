Location
Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)')
Location
Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s*')
Location
Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s')
Location
dat.files  <- list.files(path="U:/Patrick Dawson/roughness/",
recursive=T,
pattern=".pdf",
full.names=T)
readDatFile <- function(f) {
#open pdf and search for text
pdf.text <- pdftools::pdf_text(f)
pdf.short <- pdf.text[[1]]
cat(pdf.short)
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{3}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
#Variable <- c("Ra", "Rz", "Rt")
#Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s')
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
return(Data)
}
Data.Combined <- bind_rows(lapply(dat.files, readDatFile))
dat.files  <- list.files(path="U:/Patrick Dawson/roughness/",
recursive=T,
pattern=".pdf",
full.names=T)
dat.files
readDatFile <- function(f) {
#open pdf and search for text
pdf.text <- pdftools::pdf_text(f)
pdf.short <- pdf.text[[1]]
#cat(pdf.short)
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{3}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
#Variable <- c("Ra", "Rz", "Rt")
#Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s')
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
return(Data)
}
Data.Combined <- bind_rows(lapply(dat.files, readDatFile))
#open pdf and search for text
pdf.text <- pdftools::pdf_text(dat.files[1])
pdf.short <- pdf.text[[1]]
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{3}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
#open pdf and search for text
pdf.text <- pdftools::pdf_text(dat.files[2])
pdf.short <- pdf.text[[1]]
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{3}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
Data
#open pdf and search for text
pdf.text <- pdftools::pdf_text(dat.files[1:3])
readDatFile <- function(f) {
#open pdf and search for text
pdf.text <- pdftools::pdf_text(f)
pdf.short <- pdf.text[[1]]
#cat(pdf.short)
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{3}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
#Variable <- c("Ra", "Rz", "Rt")
#Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s')
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
return(Data)
}
Data.Combined <- bind_rows(lapply(dat.files, readDatFile))
Data.Combined <- bind_rows(lapply(dat.files[1], readDatFile))
Data.Combined <- bind_rows(lapply(dat.files[2], readDatFile))
Data.Combined <- bind_rows(lapply(dat.files[1:5], readDatFile))
Data.Combined <- bind_rows(lapply(dat.files[1:3], readDatFile))
Data.Combined <- bind_rows(lapply(dat.files[4], readDatFile))
#open pdf and search for text
pdf.text <- pdftools::pdf_text(dat.files[4])
pdf.short <- pdf.text[[1]]
cat(pdf.short)
#open pdf and search for text
pdf.text <- pdftools::pdf_text(dat.files[4])
pdf.short <- pdf.text[[1]]
cat(pdf.short)
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{2,4}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
dat.files  <- list.files(path="U:/Patrick Dawson/roughness/",
recursive=T,
pattern=".pdf",
full.names=T)
readDatFile <- function(f) {
#open pdf and search for text
pdf.text <- pdftools::pdf_text(f)
pdf.short <- pdf.text[[1]]
cat(pdf.short)
Date <- str_extract(pdf.short, '\\d{2,4}\\/\\d{2}\\/\\d{2}')
Time <- str_extract(pdf.short, '\\d{1,2}\\:\\d{2}\\:\\d{2}\\s\\w{2}')
TaskNumber <- str_extract(pdf.short, '\\d{4}\\-\\d{5}\\-\\d{2}')
SN <- str_extract(pdf.short, '\\w{2}\\-\\d{7}(?:_\\d{1})?')
Roughness.Value <- str_extract_all(pdf.short, '\\d{2,4}\\.\\s*\\d{2}')
Roughness.Value <- lapply(Roughness.Value, function(x)gsub('\\s+', '',x))
#Variable <- c("Ra", "Rz", "Rt")
#Location <- str_extract_all(pdf.short, 'Vertical\\s(.*?)\\s')
Data <- cbind(Date, Time, TaskNumber, SN, as.data.frame(do.call(rbind, Roughness.Value)))
colnames <- c("Date", "Time", "TaskNumber", "SN", "Vertical Toe Ra", "Vertical Toe Rz", "Vertical Toe Rt", "Vertical Center Ra", "Vertical Center Rz", "Vertical Center Rt", "Vertical 1/4 Ra", "Vertical 1/4 Rz", "Vertical 1/4 Rt", "Vertical 1/2 Ra", "Vertical 1/2 Rz", "Vertical 1/2 Rt", "Vertical 0.70 Ra", "Vertical 0.70 Rz", "Vertical 0.70 Rt")
colnames(Data) <- colnames
return(Data)
}
Data.Combined <- bind_rows(lapply(dat.files, readDatFile))
Data.Combined
write.csv(Data.Combined, "Roughness_4795_89214_25.csv", row.names = FALSE, col.names = TRUE)
shiny::runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
shiny::runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
shiny::runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
# library("ggplot2")
# library("lme4")
# library("car")
# library("dplyr")
# library("tidyr")
# library("lmerTest")
# library("ggpubr")
# library("GGally")
# library("emmeans")
# library("olsrr")
# library("readxl")
# library("ggforce")
# library("psych")
# library("jtools")
# library("sjPlot")
# library("sjmisc")
# library("kableExtra")
# library("knitr")
# library("sp")
# library("plotly")
# library("reshape2")
# library("ggeffects")
# library("MuMIn")
# library('lubridate')
# library('xlsx')
# library('stringi')
# library('fuzzyjoin')
# library('stringdist')
# library('reticulate')
# library('stringr')
#pacman::p_load(ggplot2, dplyr, tidyr, ggpubr, sjPlot, kableExtra, sp, plotly, ggeffects, akima, lme4, stringr, reshape)
library("dplyr")
library("reshape")
library("ggplot2")
library("lme4")
library("sjPlot")
library("ggeffects")
# Path <- "E:/4716/Shared Documents/91362/05 - Player Test/"
#
# dat.files  <- list.files(path= Path,
#                                recursive=T,
#                                pattern=c(".csv"),
#                                full.names=T)
#
# #function for reading each cg/moi
# readDatFile <- function(f) {
#   #dat.fl <- read_excel(path = f, sheet= 1, col_names = TRUE, skip = 0)
#   dat.fl <- read.csv(f, header = TRUE, sep=",", skip = 4,
#                na.strings=c("NA","NaN"," ",""))
# }
#
# Data.Quad <- c()
#
# #Look for sheet names to help scraper
# for (i in 1:length(dat.files)) {
#
#   temp <- readDatFile(dat.files[i])
#   temp$Player <- sub(".*/", "", dat.files[i])
#   temp$Player <-  substr(temp$Player, 1, nchar(temp$Player)-4)
#   Data.Quad <- rbind(Data.Quad, temp)
#
# }
#
# Data.Quad
#
# Data.Quad$Club[Data.Quad$Club.ID == "Club A"] <- "AW"
# Data.Quad$Club[Data.Quad$Club.ID == "Club B"] <- "9 Iron"
# Data.Quad$Club[Data.Quad$Club.ID == "Club C"] <- "AW"
# Data.Quad$Club[Data.Quad$Club.ID == "Club D"] <- "9 Iron"
#
# Data.Quad$Model[Data.Quad$Club.ID == "Club D" | Data.Quad$Club.ID == "Club C" ] <- "Tahoe HL"
# Data.Quad$Model[Data.Quad$Club.ID == "Club A" | Data.Quad$Club.ID == "Club B" ] <- "Tahoe Std"
#
# #Data.Quad.03 <- Data.Quad
# #Data.Quad.04 <- Data.Quad
# #Data.Quad.05 <- Data.Quad
#
# Data.Combined <- rbind(Data.Quad.03, Data.Quad.04, Data.Quad.05)
# Data.Combined$Tags <- Data.Combined$Model
# Data.Combined$FullTag <- paste(Data.Combined$Club, Data.Combined$Model, sep = ", " )
#
# Data.Combined <- Data.Combined %>% relocate(Player, Club, Tags, FullTag) %>% relocate(Time, .after = Vertical.Face.Impact..mm.....is.up.) %>% relocate(Shot.Color..R.G.B., .after = Time)
#
# col_names <- c("Player", "Club", "Tags", "FullTag", "Shot.ID", "Selected", "Date.quad", "Club.Type", "Club.ID", "Range.Ball.quad", "Ball.Speed.quad","Launch.Angle.quad", "Side.Angle.quad", "Side.Spin.quad", "Back.Spin.quad", "Tilt.Angle.quad", "Spin.Rate.quad", "Peak.Height.quad", "Carry.quad", "Range.quad", "Offline.quad", "Descent.Angle.quad", "Club.Speed.quad" ,"Efficiency.quad", "Angle.Of.Attack.quad", "Club.Path.quad", "Face.To.Target.quad", "Face.To.Path.quad", "Lie.quad", "Loft.quad", "Closing.Rate.quad", "Impact.Speed.quad", "Lateral.Face.quad", "Vertical.Face.quad", "Time", "Shot.Color", "Model")
# colnames(Data.Combined) <- col_names
#
# #write.csv(Data.Combined, "Core_Panel_Glob.csv")
player_speed <- 98.3
player_attack <- -4.8
player_pitch <- -7.0
Data <- read.csv('Gold_Panel_Glob.csv')
col_names <- c("Player", "Club", "Tags", "FullTag", "Shot.ID", "Selected", "Date.quad", "Club.Type", "Club.ID", "Range.Ball.quad", "Ball.Speed.quad","Launch.Angle.quad", "Side.Angle.quad", "Side.Spin.quad", "Back.Spin.quad", "Tilt.Angle.quad", "Spin.Rate.quad", "Peak.Height.quad", "Carry.quad", "Range.quad", "Offline.quad", "Descent.Angle.quad", "Club.Speed.quad" ,"Efficiency.quad", "Angle.Of.Attack.quad", "Club.Path.quad", "Face.To.Target.quad", "Face.To.Path.quad", "Lie.quad", "Loft.quad", "Closing.Rate.quad", "Impact.Speed.quad", "Lateral.Face.quad", "Vertical.Face.quad", "Time", "Shot.Color")
colnames(Data) <- col_names
Data$Model <- Data$Tags
Data.core <- read.csv('Core_Panel_Glob.csv')
Data <- rbind(Data, Data.core)
Data %>% group_by(Tags) %>% summarise(n())
Data %>% group_by(Player) %>% summarise(n())
Data %>% filter(Model == "Tahoe HL") %>% group_by(Club) %>% summarise(n())
Data$Length[Data$Club== "PW"] <- 35.75
Data$Length[Data$Club== "9 Iron"] <- 36.0
Data$Length[Data$Club== "8 Iron"] <- 36.5
Data$Length[Data$Club== "7 Iron"] <- 37.0
Data$Length[Data$Club== "6 Iron"] <- 37.5
Data$Length[Data$Club== "5 Iron"] <- 38.0
Data$Length[Data$Club== "AW" & Data$Model == "Tahoe Std"] <- 35.5
Data$Length[Data$Club== "9 Iron" & Data$Model == "Tahoe Std"] <- 36.0
Data$Length[Data$Club== "7 Iron" & Data$Model == "Tahoe Std"] <- 37.25
Data$Length[Data$Club== "5 Iron" & Data$Model == "Tahoe Std"] <- 38.5
Data$Length[Data$Club== "AW" & Data$Model == "Tahoe HL"] <- 35.5
Data$Length[Data$Club== "9 Iron" & Data$Model == "Tahoe HL"] <- 36.0
Data$Length[Data$Club== "7 Iron" & Data$Model == "Tahoe HL"] <- 37.5
Data$Length[Data$Club== "5 Iron" & Data$Model == "Tahoe HL"] <- 39.0
Data$Length[Data$Club== "PW"] <- 35.75
Data$Length[Data$Club== "9 Iron"] <- 36.0
Data$Length[Data$Club== "8 Iron"] <- 36.5
Data$Length[Data$Club== "7 Iron"] <- 37.0
Data$Length[Data$Club== "6 Iron"] <- 37.5
Data$Length[Data$Club== "5 Iron"] <- 38.0
Data$Static.Loft[Data$Club == "PW" & Data$Model == "TCB"] <- 46.75
Data$Static.Loft[Data$Club == "9 Iron" & Data$Model == "TCB"] <- 42.5
Data$Static.Loft[Data$Club == "8 Iron" & Data$Model == "TCB"] <- 39
Data$Static.Loft[Data$Club == "7 Iron" & Data$Model == "TCB"] <- 34.75
Data$Static.Loft[Data$Club == "6 Iron" & Data$Model == "TCB"] <- 30.25
Data$Static.Loft[Data$Club == "5 Iron" & Data$Model == "TCB"] <- 26.5
Data$Static.Loft[Data$Club == "PW" & Data$Model == "MB21"] <- 46
Data$Static.Loft[Data$Club == "9 Iron" & Data$Model == "MB21"] <- 42.5
Data$Static.Loft[Data$Club == "8 Iron" & Data$Model == "MB21"] <- 38.25
Data$Static.Loft[Data$Club == "7 Iron" & Data$Model == "MB21"] <- 34.25
Data$Static.Loft[Data$Club == "6 Iron" & Data$Model == "MB21"] <- 30.5
Data$Static.Loft[Data$Club == "5 Iron" & Data$Model == "MB21"] <- 26.25
Data$Static.Loft[Data$Club == "AW" & Data$Model == "Tahoe Std"] <- 47.0
Data$Static.Loft[Data$Club == "9 Iron" & Data$Model == "Tahoe Std"] <- 37.0
Data$Static.Loft[Data$Club == "7 Iron" & Data$Model == "Tahoe Std"] <- 29.0
Data$Static.Loft[Data$Club == "5 Iron" & Data$Model == "Tahoe Std"] <- 23.0
Data$Static.Loft[Data$Club == "AW" & Data$Model == "Tahoe HL"] <- 48.0
Data$Static.Loft[Data$Club == "9 Iron" & Data$Model == "Tahoe HL"] <- 38.0
Data$Static.Loft[Data$Club == "7 Iron" & Data$Model == "Tahoe HL"] <- 30.0
Data$Static.Loft[Data$Club == "5 Iron" & Data$Model == "Tahoe HL"] <- 24.0
Data <- within(Data, {
Player <- factor(Player)
Club <- factor(Club)
Club.Speed.quad <- as.numeric(Club.Speed.quad)
Efficiency.quad <- as.numeric(Efficiency.quad)
Angle.Of.Attack.quad <- as.numeric(Angle.Of.Attack.quad)
Club.Path.quad <- as.numeric(Club.Path.quad)
Face.To.Target.quad <- as.numeric(Face.To.Target.quad)
Face.To.Path.quad <- as.numeric(Face.To.Path.quad)
Lie.quad <- as.numeric(Lie.quad)
Loft.quad <- as.numeric(Loft.quad)
Lateral.Face.quad <- as.numeric(Lateral.Face.quad)*-1
Vertical.Face.quad <- as.numeric(Vertical.Face.quad)
})
Data$Pitch <- Data$Loft.quad - Data$Static.Loft
Data.Combined <- Data
# create detect outlier function
# detect_outlier <- function(x) {
#
# 	# calculate first quantile
# 	Quantile1 <- quantile(x %>% na.omit(), probs=.25)
#
# 	# calculate third quantile
# 	Quantile3 <- quantile(x %>% na.omit(), probs=.75)
#
# 	# calculate inter quartile range
# 	IQR = Quantile3-Quantile1
#
# 	# return true or false
# 	x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
# }
#
# # create remove outlier function
# remove_outlier <- function(dataframe,
# 							columns=names(dataframe)) {
#
# 	# for loop to traverse in columns vector
# 	for (col in columns) {
#
# 		# remove observation if it satisfies outlier function
# 		temp <- !detect_outlier(dataframe[[col]])
# 		temp[temp = NA] <- TRUE
# 	  dataframe <- dataframe[, ]
# 	}
#
# 	# return dataframe
# 	print("Remove outliers")
# 	print(dataframe)
# }
data_long_ball <- melt(Data.Combined %>% select(Ball.Speed.quad, Launch.Angle.quad, Side.Angle.quad, Side.Spin.quad, Back.Spin.quad))
data_long_club <- melt(Data.Combined %>% select(Club.Speed.quad, Angle.Of.Attack.quad, Club.Path.quad, Face.To.Target.quad, Face.To.Path.quad, Lie.quad, Pitch, Lateral.Face.quad, Vertical.Face.quad))
ggplot(data_long_ball, aes(x=value,)) + geom_boxplot() + facet_wrap(~variable, scale="free")
ggplot(data_long_club, aes(x=value,)) + geom_boxplot() + facet_wrap(~variable, scale="free")
Data.Combined <- Data.Combined %>% filter(Ball.Speed.quad > 50, Launch.Angle.quad < 50, Side.Angle.quad < 25, Side.Spin.quad < 2000, Back.Spin.quad > 3000, Face.To.Target.quad < 15, Face.To.Target.quad > -15, Lie.quad < 20, Lie.quad > -20, Pitch > -25, Pitch < 0, Lateral.Face.quad > -20, Lateral.Face.quad < 20, Vertical.Face.quad < 10, Vertical.Face.quad > -30)
ggplot(Data.Combined, aes(x = Length, y = Club.Speed.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Angle.Of.Attack.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Club.Path.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Pitch)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
lm.Club.Speed.quad <-lmer(Club.Speed.quad ~
# Fixed-effects
1 + Length + I(Length^2) +
# Random-effects
(1 + Length + I(Length^2) | Player), data = Data.Combined)
lm.Angle.Of.Attack.quad <-lmer(Angle.Of.Attack.quad ~
# Fixed-effects
1 + Length + I(Length^2) +
# Random-effects
(1 + Length + I(Length^2) | Player), data = Data.Combined)
lm.Pitch <-lmer(Pitch ~
# Fixed-effects
1 + Length + I(Length^2) +
# Random-effects
(1 + Length + I(Length^2) | Player), data = Data.Combined)
plot_model(lm.Club.Speed.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Angle.Of.Attack.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Pitch, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Club.Speed.quad, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
plot_model(lm.Angle.Of.Attack.quad, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
plot_model(lm.Pitch, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
Data.Combined.train <- Data.Combined %>% filter(Model == "Tahoe Std" | Model == "Tahoe HL")
# Data.Combined.train$Model[Data.Combined.train$Model== "MB21"] <- "Tahoe (test)"
# Data.Combined.train$Model[Data.Combined.train$Model== "TCB"] <- "Tahoe HL (test)"
Data.Combined.train <- within(Data.Combined.train, {
Model <- factor(as.character(Model))
})
Data.Combined.train <-  Data.Combined.train %>% arrange(Player, Club, Model)
Data.Combined %>% group_by(Model) %>% summarise(n())
lm.Ball.Speed.normalize <-lmer(Ball.Speed.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Pitch + Length:Club.Speed.quad + Length:Pitch + Vertical.Face.quad + Lateral.Face.quad +
Model:Vertical.Face.quad + Model:Lateral.Face.quad + Model:I(Vertical.Face.quad^2) + Model:I(Lateral.Face.quad^2) +
# Random-effects
(1 + Club.Speed.quad + Pitch + Vertical.Face.quad + Lateral.Face.quad| Player), data = Data.Combined.train)
lm.Launch.Angle.normalize <-lmer(Launch.Angle.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Length:Pitch + Vertical.Face.quad +
Static.Loft:Club.Speed.quad + Static.Loft:Angle.Of.Attack.quad + Static.Loft:Pitch + Static.Loft:Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
Length:Pitch + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
lm.Side.Angle.normalize <-lmer(Side.Angle.quad ~
# Fixed-effects
1 + Length*Club.Speed.quad + Length*Face.To.Target.quad + Length*Lateral.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Face.To.Target.quad + Lateral.Face.quad | Player), data = Data.Combined.train)
lm.Side.Spin.normalize <-lmer(Side.Spin.quad ~
# Fixed-effects
1 + Length*Club.Speed.quad + Length*Face.To.Path.quad + Length*Lateral.Face.quad  +
# Random-effects
(1 + Club.Speed.quad + Face.To.Path.quad + Lateral.Face.quad | Player), data = Data.Combined.train)
summary(lm.Ball.Speed.normalize)
plot_model(lm.Ball.Speed.normalize, type = "pred", terms = c("Club.Speed.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
# plot_model(lm.Ball.Speed.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Ball.Speed.normalize, type = "pred", terms = c("Pitch", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Ball.Speed.normalize, type = "pred", terms = c("Vertical.Face.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Ball.Speed.normalize, type = "pred", terms = c("Lateral.Face.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
lm.Launch.Angle.normalize <-lmer(Launch.Angle.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Length:Pitch + Vertical.Face.quad +
Static.Loft:Club.Speed.quad + Static.Loft:Angle.Of.Attack.quad + Static.Loft:Pitch + Static.Loft:Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#summary(lm.Launch.Angle.normalize)
#ggpredict(lm.Launch.Angle.normalize)
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Club.Speed.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Club.Speed.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Pitch", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Pitch", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Vertical.Face.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Launch.Angle.normalize, type = "pred", terms = c("Vertical.Face.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model:Length + Static.Loft + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Club.Speed.quad +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
#plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Club.Speed.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Pitch", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Vertical.Face.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Club.Speed.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Pitch", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Vertical.Face.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
lm.Side.Angle.normalize <-lmer(Side.Angle.quad ~
# Fixed-effects
1 + Length*Face.To.Target.quad + Length*Lateral.Face.quad +
# Random-effects
(1 + Face.To.Target.quad + Lateral.Face.quad | Player), data = Data.Combined.train)
ggpredict(lm.Side.Angle.normalize)
plot_model(lm.Side.Angle.normalize, type = "pred", terms = c("Club.Speed.quad", "Length"), show.data = TRUE)+theme_sjplot()+theme_classic()
ggplot(predict_trajectory, aes(x = X.yards, y = Z.yards*3, color = Model, shape = Club)) +
geom_point() + xlab("Distance (yards)") + ylab("Height (ft)") + theme_classic()
lm.Ball.Speed.normalize <-lmer(Ball.Speed.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Pitch + Length:Club.Speed.quad + Length:Pitch + Vertical.Face.quad + Lateral.Face.quad +
Model:Vertical.Face.quad + Model:Lateral.Face.quad + Model:I(Vertical.Face.quad^2) + Model:I(Lateral.Face.quad^2) +
# Random-effects
(1 + Club.Speed.quad + Pitch + Vertical.Face.quad + Lateral.Face.quad| Player), data = Data.Combined.train)
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
