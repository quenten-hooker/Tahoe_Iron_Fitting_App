plot_model(lm.Club.Speed.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
Data.Combined %>% group_by(Length) %>% summarise(mean(Vertical.Face.quad))
Hunter Reed, Jonathan Sanders
ggplot(Data.Combined, aes(x = Length, y = Angle.Of.Attack.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Club.Path.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Pitch)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Ball.Speed.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Launch.Angle.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Back.Spin.quad)) + geom_point(aes(color = Player)) + geom_smooth(aes(color = Player), method = "lm", formula = y ~ x + I(x^2), se=TRUE, level = .8, linetype = 1)+ theme_classic() + theme(legend.key.size = unit(.5, 'cm'), legend.key.width= unit(.1, 'cm'), legend.text = element_text(size=7))
ggplot(Data.Combined, aes(x = Length, y = Ball.Speed.quad)) + geom_point() + geom_smooth(method = 'loess', formula = 'y~x')
ggplot(Data.Combined, aes(x = Length, y = Ball.Speed.quad)) + geom_point() + geom_smooth(method = "lm", formula = y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5), se=TRUE, level = .8, linetype = 1)
ggplot(Data.Combined, aes(x = Length, y = Launch.Angle.quad)) + geom_point() + geom_smooth(method = 'loess', formula = 'y~x')
ggplot(Data.Combined, aes(x = Length, y = Back.Spin.quad)) + geom_point() + geom_smooth(method = 'loess', formula = 'y~x')
#saveRDS(lm.Club.Speed.quad, file = "mem_speed_TTB_test.rda")
#saveRDS(lm.Pitch, file = "mem_pitch_TTB_test.rda")
#saveRDS(lm.Angle.Of.Attack.quad, file = "mem_attack_TTB_test.rda")
lm.Club.Speed.quad <-lmer(Club.Speed.quad ~
# Fixed-effects
1 + Length + I(Length^2) +
# Random-effects
(1 + Length | Player), data = Data.Combined)
lm.Angle.Of.Attack.quad <-lmer(Angle.Of.Attack.quad ~
# Fixed-effects
1 + Length +
# Random-effects
(1 + Length  | Player), data = Data.Combined)
lm.Pitch <-lmer(Pitch ~
# Fixed-effects
1 + Length  +
# Random-effects
(1 + Length  | Player), data = Data.Combined)
lm.Ball.Speed.quad <-lmer(Ball.Speed.quad ~
# Fixed-effects
1 + Length*Static.Loft + I(Length^2)*I(Static.Loft^2) +
# Random-effects
(1 + Length + Static.Loft | Player), data = Data.Combined)
plot_model(lm.Club.Speed.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Ball.Speed.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Ball.Speed.quad, type = "pred", terms = c("Static.Loft[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Angle.Of.Attack.quad, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Pitch, type = "pred", terms = c("Length[all]"), ci.lvl = NA, show.data = TRUE)+theme_sjplot()
plot_model(lm.Club.Speed.quad, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
plot_model(lm.Ball.Speed.quad, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
plot_model(lm.Angle.Of.Attack.quad, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
plot_model(lm.Pitch, type = "pred", pred.type = ("re"), terms = c("Length[all]", "Player"), show.data = FALSE, ci.lvl =NA)+theme_sjplot()
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model:Length + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Club.Speed.quad +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
Data.Combined.train <- Data.Combined %>% filter(Model == "Tahoe Std" | Model == "Tahoe HL")
Data.Combined.train <- within(Data.Combined.train, {
Model <- factor(as.character(Model))
})
Data.Combined.train <-  Data.Combined.train %>% arrange(Player, Club, Model)
Data.Combined %>% group_by(Model) %>% summarise(n())
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model:Length + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Club.Speed.quad +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model:Length + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad + Club.Speed.quad +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
# saveRDS(lm.Back.Spin.normalize, file = "mem_backs_tahoe_test.rda")
ggpredict(lm.Back.Spin.normalize)
#plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Club.Speed.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Angle.Of.Attack.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Pitch", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Vertical.Face.quad", "Length", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
plot_model(lm.Back.Spin.normalize, type = "pred", terms = c("Club.Speed.quad", "Static.Loft", "Model"), show.data = TRUE)+theme_sjplot()+theme_classic()
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model +
# Random-effects
(1 | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length +
# Random-effects
(1 | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft +
# Random-effects
(1 | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft +
# Random-effects
(1 | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft +
# Random-effects
(1 | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad +
# Random-effects
(1 | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad + Pitch + Attack +
# Random-effects
(1 + Club.Speed.quad + Pitch + Attack | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad + Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Club.Speed.quad + Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Club.Speed.quad + Length:Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length*Static.Loft + Club.Speed.quad + Length:Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_2.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad + Length:Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Club.Speed.quad + Length:Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_2.rda")
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_2.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Length:Pitch + Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Length:Pitch + Length:Angle.Of.Attack.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_3.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Length:Pitch + Length:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Length:Pitch + Length:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Length:Pitch + Length:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_3.rda")
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_4.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Pitch + Length:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length:Club.Speed.quad + Pitch + Length:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_4.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Length + Club.Speed.quad + Pitch + Angle.Of.Attack.quad  +
# Random-effects
(1 + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model
# Random-effects
(1  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model +
# Random-effects
(1  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length +
# Random-effects
(1  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft +
# Random-effects
(1  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Attack + Pitch +
# Random-effects
(1 + Attack + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Attack + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Attack + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Pitch +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft:Pitch +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length:Static.Loft + Static.Loft:Pitch +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft +
# Random-effects
(1 + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad:Length + Angle.Of.Attack.quad:Length + Pitch:Length +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Club.Speed.quad*Length + Angle.Of.Attack.quad*Length + Pitch*Length +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_5.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Club.Speed.quad + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length*Static.Loft + Club.Speed.quad + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length*Static.Loft + Club.Speed.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Static.Loft + Club.Speed.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Length + Club.Speed.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Angle.Of.Attack.quad + Pitch +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_6.rda")
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_7.rda")
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad +  Pitch + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Angle.Of.Attack.quad:Pitch + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_8.rda")
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Pitch:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Model + Static.Loft + Club.Speed.quad + Pitch:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Static.Loft + Club.Speed.quad + Pitch:Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
# Fixed-effects
1 + Static.Loft + Club.Speed.quad + Pitch + Angle.Of.Attack.quad + Vertical.Face.quad +
# Random-effects
(1 + Club.Speed.quad + Angle.Of.Attack.quad + Pitch  | Player), data = Data.Combined.train)
ggpredict(lm.Back.Spin.normalize)
# lm.Back.Spin.normalize <-lmer(Back.Spin.quad ~
#            # Fixed-effects
#            1 + Model + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad +
#              + Length:Vertical.Face.quad + Static.Loft:Club.Speed.quad + Static.Loft:Vertical.Face.quad +
#            # Random-effects
#            (1 + Angle.Of.Attack.quad + Pitch + Vertical.Face.quad| Player), data = Data.Combined.train)
#
saveRDS(lm.Back.Spin.normalize, file = "mem_backs_7.20.23_9.rda")
shiny::runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
shiny::runApp('C:/Users/Quenten.hooker/OneDrive - Callaway Golf/quenten.hooker OneDrive/Innovation_projects/Irons/Tahoe_Iron_Fitting_App')
